// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/service.go
//
// Generated by this command:
//
//	mockgen -source=./internal/service.go -destination=./internal/mock_service.go -package=internal
//

// Package internal is a generated GoMock package.
package internal

import (
	model "location-api/model"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockLocationDBStore is a mock of LocationDBStore interface.
type MockLocationDBStore struct {
	ctrl     *gomock.Controller
	recorder *MockLocationDBStoreMockRecorder
}

// MockLocationDBStoreMockRecorder is the mock recorder for MockLocationDBStore.
type MockLocationDBStoreMockRecorder struct {
	mock *MockLocationDBStore
}

// NewMockLocationDBStore creates a new mock instance.
func NewMockLocationDBStore(ctrl *gomock.Controller) *MockLocationDBStore {
	mock := &MockLocationDBStore{ctrl: ctrl}
	mock.recorder = &MockLocationDBStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLocationDBStore) EXPECT() *MockLocationDBStoreMockRecorder {
	return m.recorder
}

// CreateLocation mocks base method.
func (m *MockLocationDBStore) CreateLocation(req *model.CreateLocationRequest) (*model.CreateLocationResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateLocation", req)
	ret0, _ := ret[0].(*model.CreateLocationResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateLocation indicates an expected call of CreateLocation.
func (mr *MockLocationDBStoreMockRecorder) CreateLocation(req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateLocation", reflect.TypeOf((*MockLocationDBStore)(nil).CreateLocation), req)
}

// GetLocation mocks base method.
func (m *MockLocationDBStore) GetLocation(req *model.GetLocationRequest) (*model.GetLocationResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLocation", req)
	ret0, _ := ret[0].(*model.GetLocationResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLocation indicates an expected call of GetLocation.
func (mr *MockLocationDBStoreMockRecorder) GetLocation(req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLocation", reflect.TypeOf((*MockLocationDBStore)(nil).GetLocation), req)
}
